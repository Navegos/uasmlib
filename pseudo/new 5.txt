
		.if(reg2 >= 0)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0000
		.endif

	

	extern __uXm128 uXm_xmm_shuffle_0000_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0001_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0002_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0003_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0010_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0011_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0012_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0013_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0020_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0021_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0022_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0023_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0030_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0031_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0032_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0033_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0100_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0101_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0102_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0103_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0110_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0111_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0112_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0113_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0120_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0121_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0122_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0123_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0130_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0131_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0132_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0133_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0200_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0201_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0202_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0203_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0210_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0211_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0212_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0213_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0220_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0221_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0222_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0223_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0230_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0231_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0232_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0233_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0300_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0301_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0302_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0303_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0310_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0311_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0312_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0313_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0320_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0321_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0322_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0323_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0330_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0331_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0332_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_0333_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1000_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1001_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1002_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1003_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1010_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1011_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1012_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1013_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1020_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1021_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1022_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1023_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1030_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1031_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1032_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1033_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1100_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1101_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1102_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1103_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1110_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1111_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1112_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1113_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1120_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1121_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1122_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1123_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1130_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1131_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1132_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1133_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1200_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1201_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1202_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1203_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1210_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1211_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1212_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1213_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1220_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1221_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1222_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1223_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1230_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1231_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1232_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1233_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1300_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1301_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1302_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1303_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1310_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1311_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1312_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1313_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1320_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1321_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1322_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1323_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1330_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1331_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1332_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_1333_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2000_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2001_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2002_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2003_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2010_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2011_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2012_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2013_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2020_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2021_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2022_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2023_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2030_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2031_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2032_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2033_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2100_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2101_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2102_ps(__uXm128 InXmm_A, __uXm128 InXmm_B); 
	extern __uXm128 uXm_xmm_shuffle_2103_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2110_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2111_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2112_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2113_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2120_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2121_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2122_ps(__uXm128 InXmm_A, __uXm128 InXmm_B); 
	extern __uXm128 uXm_xmm_shuffle_2123_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2130_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2131_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2132_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2133_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2200_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2201_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2202_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2203_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2210_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2211_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2212_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2213_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2220_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2221_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2222_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2223_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2230_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2231_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2232_ps(__uXm128 InXmm_A, __uXm128 InXmm_B); 
	extern __uXm128 uXm_xmm_shuffle_2233_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2300_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2301_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2302_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2303_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2310_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2311_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2312_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2313_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2320_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2321_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2322_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2323_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2330_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2331_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2332_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_2333_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3000_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3001_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3002_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3003_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3010_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3011_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3012_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3013_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3020_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3021_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3022_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3023_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3030_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3031_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3032_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3033_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3100_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3101_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3102_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3103_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3110_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3111_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3112_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3113_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3120_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3121_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3122_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3123_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3130_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3131_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3132_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3133_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3200_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3201_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3202_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3203_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3210_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3211_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3212_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3213_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3220_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3221_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3222_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3223_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3230_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3231_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3232_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3233_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3300_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3301_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3302_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3303_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3310_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3311_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3312_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3313_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3320_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3321_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3322_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3323_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3330_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3331_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3332_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);
	extern __uXm128 uXm_xmm_shuffle_3333_ps(__uXm128 InXmm_A, __uXm128 InXmm_B);





		.if(reg2 == uXm_xmm_shuffle_0000)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0000
		.endif
		.if(reg2 == uXm_xmm_shuffle_0001)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0001
		.endif
		.if(reg2 == uXm_xmm_shuffle_0002)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0002
		.endif
		.if(reg2 == uXm_xmm_shuffle_0003)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0003
		.endif
		.if(reg2 == uXm_xmm_shuffle_0010)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0010
		.endif
		.if(reg2 == uXm_xmm_shuffle_0011)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0011
		.endif
		.if(reg2 == uXm_xmm_shuffle_0012)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0012
		.endif
		.if(reg2 == uXm_xmm_shuffle_0013)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0013
		.endif
		.if(reg2 == uXm_xmm_shuffle_0020)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0020
		.endif
		.if(reg2 == uXm_xmm_shuffle_0021)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0021
		.endif
		.if(reg2 == uXm_xmm_shuffle_0022)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0022
		.endif
		.if(reg2 == uXm_xmm_shuffle_0023)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0023
		.endif
		.if(reg2 == uXm_xmm_shuffle_0030)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0030
		.endif
		.if(reg2 == uXm_xmm_shuffle_0031)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0031
		.endif
		.if(reg2 == uXm_xmm_shuffle_0032)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0032
		.endif
		.if(reg2 == uXm_xmm_shuffle_0033)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0033
		.endif
		
		
		.if(reg2 == uXm_xmm_shuffle_0100)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0100
		.endif
		.if(reg2 == uXm_xmm_shuffle_0101)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0101
		.endif
		.if(reg2 == uXm_xmm_shuffle_0102)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0102
		.endif
		.if(reg2 == uXm_xmm_shuffle_0103)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0103
		.endif
		.if(reg2 == uXm_xmm_shuffle_0110)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0110
		.endif
		.if(reg2 == uXm_xmm_shuffle_0111)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0111
		.endif
		.if(reg2 == uXm_xmm_shuffle_0112)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0112
		.endif
		.if(reg2 == uXm_xmm_shuffle_0113)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0113
		.endif
		.if(reg2 == uXm_xmm_shuffle_0120)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0120
		.endif
		.if(reg2 == uXm_xmm_shuffle_0121)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0121
		.endif
		.if(reg2 == uXm_xmm_shuffle_0122)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0122
		.endif
		.if(reg2 == uXm_xmm_shuffle_0123)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0123
		.endif
		.if(reg2 == uXm_xmm_shuffle_0130)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0130
		.endif
		.if(reg2 == uXm_xmm_shuffle_0131)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0131
		.endif
		.if(reg2 == uXm_xmm_shuffle_0132)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0132
		.endif
		.if(reg2 == uXm_xmm_shuffle_0133)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0133
		.endif
		
		
		.if(reg2 == uXm_xmm_shuffle_0200)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0200
		.endif
		.if(reg2 == uXm_xmm_shuffle_0201)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0201
		.endif
		.if(reg2 == uXm_xmm_shuffle_0202)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0202
		.endif
		.if(reg2 == uXm_xmm_shuffle_0203)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0203
		.endif
		.if(reg2 == uXm_xmm_shuffle_0210)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0210
		.endif
		.if(reg2 == uXm_xmm_shuffle_0211)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0211
		.endif
		.if(reg2 == uXm_xmm_shuffle_0212)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0212
		.endif
		.if(reg2 == uXm_xmm_shuffle_0213)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0213
		.endif
		.if(reg2 == uXm_xmm_shuffle_0220)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0220
		.endif
		.if(reg2 == uXm_xmm_shuffle_0221)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0221
		.endif
		.if(reg2 == uXm_xmm_shuffle_0222)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0222
		.endif
		.if(reg2 == uXm_xmm_shuffle_0223)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0223
		.endif
		.if(reg2 == uXm_xmm_shuffle_0230)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0230
		.endif
		.if(reg2 == uXm_xmm_shuffle_0231)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0231
		.endif
		.if(reg2 == uXm_xmm_shuffle_0232)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0232
		.endif
		.if(reg2 == uXm_xmm_shuffle_0233)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0233
		.endif
		
		
		.if(reg2 == uXm_xmm_shuffle_0300)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0300
		.endif
		.if(reg2 == uXm_xmm_shuffle_0301)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0301
		.endif
		.if(reg2 == uXm_xmm_shuffle_0302)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0302
		.endif
		.if(reg2 == uXm_xmm_shuffle_0303)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0303
		.endif
		.if(reg2 == uXm_xmm_shuffle_0310)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0310
		.endif
		.if(reg2 == uXm_xmm_shuffle_0311)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0311
		.endif
		.if(reg2 == uXm_xmm_shuffle_0312)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0312
		.endif
		.if(reg2 == uXm_xmm_shuffle_0313)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0313
		.endif
		.if(reg2 == uXm_xmm_shuffle_0320)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0320
		.endif
		.if(reg2 == uXm_xmm_shuffle_0321)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0321
		.endif
		.if(reg2 == uXm_xmm_shuffle_0322)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0322
		.endif
		.if(reg2 == uXm_xmm_shuffle_0323)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0323
		.endif
		.if(reg2 == uXm_xmm_shuffle_0330)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0330
		.endif
		.if(reg2 == uXm_xmm_shuffle_0331)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0331
		.endif
		.if(reg2 == uXm_xmm_shuffle_0332)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0332
		.endif
		.if(reg2 == uXm_xmm_shuffle_0333)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_0333
		.endif
		
		
		.if(reg2 == uXm_xmm_shuffle_1000)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1000
		.endif
		.if(reg2 == uXm_xmm_shuffle_1001)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1001
		.endif
		.if(reg2 == uXm_xmm_shuffle_1002)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1002
		.endif
		.if(reg2 == uXm_xmm_shuffle_1003)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1003
		.endif
		.if(reg2 == uXm_xmm_shuffle_1010)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1010
		.endif
		.if(reg2 == uXm_xmm_shuffle_1011)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1011
		.endif
		.if(reg2 == uXm_xmm_shuffle_1012)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1012
		.endif
		.if(reg2 == uXm_xmm_shuffle_1013)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1013
		.endif
		.if(reg2 == uXm_xmm_shuffle_1020)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1020
		.endif
		.if(reg2 == uXm_xmm_shuffle_1021)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1021
		.endif
		.if(reg2 == uXm_xmm_shuffle_1022)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1022
		.endif
		.if(reg2 == uXm_xmm_shuffle_1023)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1023
		.endif
		.if(reg2 == uXm_xmm_shuffle_1030)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1030
		.endif
		.if(reg2 == uXm_xmm_shuffle_1031)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1031
		.endif
		.if(reg2 == uXm_xmm_shuffle_1032)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1032
		.endif
		.if(reg2 == uXm_xmm_shuffle_1033)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1033
		.endif
		
		
		.if(reg2 == uXm_xmm_shuffle_1100)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1100
		.endif
		.if(reg2 == uXm_xmm_shuffle_1101)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1101
		.endif
		.if(reg2 == uXm_xmm_shuffle_1102)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1102
		.endif
		.if(reg2 == uXm_xmm_shuffle_1103)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1103
		.endif
		.if(reg2 == uXm_xmm_shuffle_1110)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1110
		.endif
		.if(reg2 == uXm_xmm_shuffle_1111)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1111
		.endif
		.if(reg2 == uXm_xmm_shuffle_1112)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1112
		.endif
		.if(reg2 == uXm_xmm_shuffle_1113)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1113
		.endif
		.if(reg2 == uXm_xmm_shuffle_1120)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1120
		.endif
		.if(reg2 == uXm_xmm_shuffle_1121)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1121
		.endif
		.if(reg2 == uXm_xmm_shuffle_1122)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1122
		.endif
		.if(reg2 == uXm_xmm_shuffle_1123)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1123
		.endif
		.if(reg2 == uXm_xmm_shuffle_1130)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1130
		.endif
		.if(reg2 == uXm_xmm_shuffle_1131)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1131
		.endif
		.if(reg2 == uXm_xmm_shuffle_1132)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1132
		.endif
		.if(reg2 == uXm_xmm_shuffle_1133)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1133
		.endif
		
		
		.if(reg2 == uXm_xmm_shuffle_1200)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1200
		.endif
		.if(reg2 == uXm_xmm_shuffle_1201)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1201
		.endif
		.if(reg2 == uXm_xmm_shuffle_1202)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1202
		.endif
		.if(reg2 == uXm_xmm_shuffle_1203)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1203
		.endif
		.if(reg2 == uXm_xmm_shuffle_1210)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1210
		.endif
		.if(reg2 == uXm_xmm_shuffle_1211)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1211
		.endif
		.if(reg2 == uXm_xmm_shuffle_1212)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1212
		.endif
		.if(reg2 == uXm_xmm_shuffle_1213)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1213
		.endif
		.if(reg2 == uXm_xmm_shuffle_1220)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1220
		.endif
		.if(reg2 == uXm_xmm_shuffle_1221)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1221
		.endif
		.if(reg2 == uXm_xmm_shuffle_1222)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1222
		.endif
		.if(reg2 == uXm_xmm_shuffle_1223)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1223
		.endif
		.if(reg2 == uXm_xmm_shuffle_1230)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1230
		.endif
		.if(reg2 == uXm_xmm_shuffle_1231)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1231
		.endif
		.if(reg2 == uXm_xmm_shuffle_1232)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1232
		.endif
		.if(reg2 == uXm_xmm_shuffle_1233)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1233
		.endif
		
		
		.if(reg2 == uXm_xmm_shuffle_1300)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1300
		.endif
		.if(reg2 == uXm_xmm_shuffle_1301)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1301
		.endif
		.if(reg2 == uXm_xmm_shuffle_1302)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1302
		.endif
		.if(reg2 == uXm_xmm_shuffle_1303)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1303
		.endif
		.if(reg2 == uXm_xmm_shuffle_1310)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1310
		.endif
		.if(reg2 == uXm_xmm_shuffle_1311)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1311
		.endif
		.if(reg2 == uXm_xmm_shuffle_1312)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1312
		.endif
		.if(reg2 == uXm_xmm_shuffle_1313)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1313
		.endif
		.if(reg2 == uXm_xmm_shuffle_1320)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1320
		.endif
		.if(reg2 == uXm_xmm_shuffle_1321)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1321
		.endif
		.if(reg2 == uXm_xmm_shuffle_1322)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1322
		.endif
		.if(reg2 == uXm_xmm_shuffle_1323)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1323
		.endif
		.if(reg2 == uXm_xmm_shuffle_1330)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1330
		.endif
		.if(reg2 == uXm_xmm_shuffle_1331)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1331
		.endif
		.if(reg2 == uXm_xmm_shuffle_1332)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1332
		.endif
		.if(reg2 == uXm_xmm_shuffle_1333)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_1333
		.endif
		
		
		.if(reg2 == uXm_xmm_shuffle_2000)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2000
		.endif
		.if(reg2 == uXm_xmm_shuffle_2001)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2001
		.endif
		.if(reg2 == uXm_xmm_shuffle_2002)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2002
		.endif
		.if(reg2 == uXm_xmm_shuffle_2003)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2003
		.endif
		.if(reg2 == uXm_xmm_shuffle_2010)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2010
		.endif
		.if(reg2 == uXm_xmm_shuffle_2011)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2011
		.endif
		.if(reg2 == uXm_xmm_shuffle_2012)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2012
		.endif
		.if(reg2 == uXm_xmm_shuffle_2013)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2013
		.endif
		.if(reg2 == uXm_xmm_shuffle_2020)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2020
		.endif
		.if(reg2 == uXm_xmm_shuffle_2021)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2021
		.endif
		.if(reg2 == uXm_xmm_shuffle_2022)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2022
		.endif
		.if(reg2 == uXm_xmm_shuffle_2023)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2023
		.endif
		.if(reg2 == uXm_xmm_shuffle_2030)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2030
		.endif
		.if(reg2 == uXm_xmm_shuffle_2031)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2031
		.endif
		.if(reg2 == uXm_xmm_shuffle_2032)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2032
		.endif
		.if(reg2 == uXm_xmm_shuffle_2033)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2033
		.endif
		
		
		.if(reg2 == uXm_xmm_shuffle_2100)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2100
		.endif
		.if(reg2 == uXm_xmm_shuffle_2101)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2101
		.endif
		.if(reg2 == uXm_xmm_shuffle_2102)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2102
		.endif
		.if(reg2 == uXm_xmm_shuffle_2103)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2103
		.endif
		.if(reg2 == uXm_xmm_shuffle_2110)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2110
		.endif
		.if(reg2 == uXm_xmm_shuffle_2111)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2111
		.endif
		.if(reg2 == uXm_xmm_shuffle_2112)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2112
		.endif
		.if(reg2 == uXm_xmm_shuffle_2113)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2113
		.endif
		.if(reg2 == uXm_xmm_shuffle_2120)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2120
		.endif
		.if(reg2 == uXm_xmm_shuffle_2121)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2121
		.endif
		.if(reg2 == uXm_xmm_shuffle_2122)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2122
		.endif
		.if(reg2 == uXm_xmm_shuffle_2123)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2123
		.endif
		.if(reg2 == uXm_xmm_shuffle_2130)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2130
		.endif
		.if(reg2 == uXm_xmm_shuffle_2131)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2131
		.endif
		.if(reg2 == uXm_xmm_shuffle_2132)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2132
		.endif
		.if(reg2 == uXm_xmm_shuffle_2133)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2133
		.endif
		
		
		.if(reg2 == uXm_xmm_shuffle_2200)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2200
		.endif
		.if(reg2 == uXm_xmm_shuffle_2201)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2201
		.endif
		.if(reg2 == uXm_xmm_shuffle_2202)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2202
		.endif
		.if(reg2 == uXm_xmm_shuffle_2203)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2203
		.endif
		.if(reg2 == uXm_xmm_shuffle_2210)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2210
		.endif
		.if(reg2 == uXm_xmm_shuffle_2211)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2211
		.endif
		.if(reg2 == uXm_xmm_shuffle_2212)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2212
		.endif
		.if(reg2 == uXm_xmm_shuffle_2213)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2213
		.endif
		.if(reg2 == uXm_xmm_shuffle_2220)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2220
		.endif
		.if(reg2 == uXm_xmm_shuffle_2221)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2221
		.endif
		.if(reg2 == uXm_xmm_shuffle_2222)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2222
		.endif
		.if(reg2 == uXm_xmm_shuffle_2223)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2223
		.endif
		.if(reg2 == uXm_xmm_shuffle_2230)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2230
		.endif
		.if(reg2 == uXm_xmm_shuffle_2231)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2231
		.endif
		.if(reg2 == uXm_xmm_shuffle_2232)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2232
		.endif
		.if(reg2 == uXm_xmm_shuffle_2233)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2233
		.endif
		
		
		.if(reg2 == uXm_xmm_shuffle_2300)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2300
		.endif
		.if(reg2 == uXm_xmm_shuffle_2301)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2301
		.endif
		.if(reg2 == uXm_xmm_shuffle_2302)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2302
		.endif
		.if(reg2 == uXm_xmm_shuffle_2303)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2303
		.endif
		.if(reg2 == uXm_xmm_shuffle_2310)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2310
		.endif
		.if(reg2 == uXm_xmm_shuffle_2311)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2311
		.endif
		.if(reg2 == uXm_xmm_shuffle_2312)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2312
		.endif
		.if(reg2 == uXm_xmm_shuffle_2313)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2313
		.endif
		.if(reg2 == uXm_xmm_shuffle_2320)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2320
		.endif
		.if(reg2 == uXm_xmm_shuffle_2321)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2321
		.endif
		.if(reg2 == uXm_xmm_shuffle_2322)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2322
		.endif
		.if(reg2 == uXm_xmm_shuffle_2323)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2323
		.endif
		.if(reg2 == uXm_xmm_shuffle_2330)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2330
		.endif
		.if(reg2 == uXm_xmm_shuffle_2331)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2331
		.endif
		.if(reg2 == uXm_xmm_shuffle_2332)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2332
		.endif
		.if(reg2 == uXm_xmm_shuffle_2333)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_2333
		.endif
		
		
		.if(reg2 == uXm_xmm_shuffle_3000)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3000
		.endif
		.if(reg2 == uXm_xmm_shuffle_3001)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3001
		.endif
		.if(reg2 == uXm_xmm_shuffle_3002)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3002
		.endif
		.if(reg2 == uXm_xmm_shuffle_3003)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3003
		.endif
		.if(reg2 == uXm_xmm_shuffle_3010)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3010
		.endif
		.if(reg2 == uXm_xmm_shuffle_3011)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3011
		.endif
		.if(reg2 == uXm_xmm_shuffle_3012)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3012
		.endif
		.if(reg2 == uXm_xmm_shuffle_3013)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3013
		.endif
		.if(reg2 == uXm_xmm_shuffle_3020)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3020
		.endif
		.if(reg2 == uXm_xmm_shuffle_3021)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3021
		.endif
		.if(reg2 == uXm_xmm_shuffle_3022)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3022
		.endif
		.if(reg2 == uXm_xmm_shuffle_3023)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3023
		.endif
		.if(reg2 == uXm_xmm_shuffle_3030)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3030
		.endif
		.if(reg2 == uXm_xmm_shuffle_3031)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3031
		.endif
		.if(reg2 == uXm_xmm_shuffle_3032)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3032
		.endif
		.if(reg2 == uXm_xmm_shuffle_3033)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3033
		.endif
		
		
		.if(reg2 == uXm_xmm_shuffle_3100)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3100
		.endif
		.if(reg2 == uXm_xmm_shuffle_3101)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3101
		.endif
		.if(reg2 == uXm_xmm_shuffle_3102)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3102
		.endif
		.if(reg2 == uXm_xmm_shuffle_3103)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3103
		.endif
		.if(reg2 == uXm_xmm_shuffle_3110)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3110
		.endif
		.if(reg2 == uXm_xmm_shuffle_3111)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3111
		.endif
		.if(reg2 == uXm_xmm_shuffle_3112)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3112
		.endif
		.if(reg2 == uXm_xmm_shuffle_3113)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3113
		.endif
		.if(reg2 == uXm_xmm_shuffle_3120)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3120
		.endif
		.if(reg2 == uXm_xmm_shuffle_3121)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3121
		.endif
		.if(reg2 == uXm_xmm_shuffle_3122)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3122
		.endif
		.if(reg2 == uXm_xmm_shuffle_3123)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3123
		.endif
		.if(reg2 == uXm_xmm_shuffle_3130)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3130
		.endif
		.if(reg2 == uXm_xmm_shuffle_3131)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3131
		.endif
		.if(reg2 == uXm_xmm_shuffle_3132)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3132
		.endif
		.if(reg2 == uXm_xmm_shuffle_3133)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3133
		.endif
		
		
		.if(reg2 == uXm_xmm_shuffle_3200)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3200
		.endif
		.if(reg2 == uXm_xmm_shuffle_3201)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3201
		.endif
		.if(reg2 == uXm_xmm_shuffle_3202)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3202
		.endif
		.if(reg2 == uXm_xmm_shuffle_3203)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3203
		.endif
		.if(reg2 == uXm_xmm_shuffle_3210)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3210
		.endif
		.if(reg2 == uXm_xmm_shuffle_3211)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3211
		.endif
		.if(reg2 == uXm_xmm_shuffle_3212)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3212
		.endif
		.if(reg2 == uXm_xmm_shuffle_3213)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3213
		.endif
		.if(reg2 == uXm_xmm_shuffle_3220)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3220
		.endif
		.if(reg2 == uXm_xmm_shuffle_3221)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3221
		.endif
		.if(reg2 == uXm_xmm_shuffle_3222)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3222
		.endif
		.if(reg2 == uXm_xmm_shuffle_3223)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3223
		.endif
		.if(reg2 == uXm_xmm_shuffle_3230)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3230
		.endif
		.if(reg2 == uXm_xmm_shuffle_3231)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3231
		.endif
		.if(reg2 == uXm_xmm_shuffle_3232)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3232
		.endif
		.if(reg2 == uXm_xmm_shuffle_3233)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3233
		.endif
		
		
		.if(reg2 == uXm_xmm_shuffle_3300)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3300
		.endif
		.if(reg2 == uXm_xmm_shuffle_3301)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3301
		.endif
		.if(reg2 == uXm_xmm_shuffle_3302)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3302
		.endif
		.if(reg2 == uXm_xmm_shuffle_3303)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3303
		.endif
		.if(reg2 == uXm_xmm_shuffle_3310)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3310
		.endif
		.if(reg2 == uXm_xmm_shuffle_3311)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3311
		.endif
		.if(reg2 == uXm_xmm_shuffle_3312)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3312
		.endif
		.if(reg2 == uXm_xmm_shuffle_3313)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3313
		.endif
		.if(reg2 == uXm_xmm_shuffle_3320)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3320
		.endif
		.if(reg2 == uXm_xmm_shuffle_3321)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3321
		.endif
		.if(reg2 == uXm_xmm_shuffle_3322)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3322
		.endif
		.if(reg2 == uXm_xmm_shuffle_3323)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3323
		.endif
		.if(reg2 == uXm_xmm_shuffle_3330)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3330
		.endif
		.if(reg2 == uXm_xmm_shuffle_3331)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3331
		.endif
		.if(reg2 == uXm_xmm_shuffle_3332)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3332
		.endif
		.if(reg2 == uXm_xmm_shuffle_3333)
			shufps				reg0,			reg1,			uXm_xmm_shuffle_3333
		.endif
	
